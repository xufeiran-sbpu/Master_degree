szstock<-read.csv("szstock.csv")
MyData <- szstock$Close
tsdata <- ts(MyData, start =1,frequency = 365)
plot.ts(tsdata)
MyData.acf <- acf(MyData)
MyData.acf
MyData.pacf<-pacf(MyData)
MyData.pacf
diff1 <- diff(tsdata,lag = 1)
acf(diff1)
diff2 <- diff(tsdata,lag = 2)
acf(diff2)
ndiffs(tsdata)
library(forecast)
ndiffs(tsdata)
library(tseries)
adf.test(tsdata)
adf.test(diff1[-1])
adf.test(diff2[-2])
pacf(diff1)
fit_model <- Arima(diff1,order = c(2,1,4))
fit_model
fit_model.residuals <- residuals(fit_model)
fit_model.fitted <- diff1 - fit_model.residuals
checkresiduals(fit_model)
acf(fit_model.residuals)
fit_model.residuals <- residuals(fit_model)
fit_model.fitted <- diff1 - fit_model.residuals
checkresiduals(fit_model, h = 8)
fit_model.residuals <- residuals(fit_model)
fit_model.fitted <- diff1 - fit_model.residuals
checkresiduals(fit_model, h = 10)
fit_model.residuals <- residuals(fit_model)
fit_model.fitted <- diff1 - fit_model.residuals
checkresiduals(fit_model)
acf(diff1)
plot(decompose(tsdata,type = "multiplicative"))
seas_diff <- diff(diff1, lag = 365)
plot(seas_diff)
seas_diff_fit <- auto.arima(diff1,D=1,trace = T,seasonal = T)
seas_diff_fit
checkresiduals(seas_diff_fit)
seas_diff_fit <- auto.sarima(diff1,D=1,trace = T,seasonal = T)
SARIMA <- sarima(diff1, 4, 0, 0, P = 0, D = 1, Q = 0, S = 365,
details = TRUE, xreg=NULL, Model=TRUE,
fixed=NULL, tol = sqrt(.Machine$double.eps),
no.constant = FALSE, ...)
install.packages("sarima")
SARIMA <- sarima(diff1, 4, 0, 0, P = 0, D = 1, Q = 0, S = 365,
details = TRUE, xreg=NULL, Model=TRUE,
fixed=NULL, tol = sqrt(.Machine$double.eps),
no.constant = FALSE, ...)
install.packages("sarima")
library(sarima)
SARIMA <- sarima(diff1, 4, 0, 0, P = 0, D = 1, Q = 0, S = 365,
details = TRUE, xreg=NULL, Model=TRUE,
fixed=NULL, tol = sqrt(.Machine$double.eps),
no.constant = FALSE, ...)
sarima(diff1, 4, 0, 0, P = 0, D = 1, Q = 0, S = 365)
sarima(diff1, 4, 0, 0, 0, 1,0, S = 365)
sarima(seas_diff_fit, ss.method = "sarima", use.symmetry = FALSE, SSinit = "Rossignol2011")
seas_diff_fit <- auto.arima(seas_diff,D=1,trace = T,seasonal = T)
seas_diff_fit
checkresiduals(seas_diff_fit)
seas_diff_fit <- auto.arima(seas_diff, d=1,D=1 , trace = T, seasonal = T)
szstock<-read.csv("../Datasets-master/airline-passengers.csv")
szstock<-read.csv("../Datasets-master/monthly-mean-temp.csv")
szstock<-read.csv("./Datasets-master/monthly-mean-temp.csv")
MyData <- szstock
tsdata <- ts(MyData, start =1,frequency = 365)
plot.ts(tsdata)
szstock<-read.csv("./Datasets-master/monthly-mean-temp.csv")
MyData <- szstock$Temperature
tsdata <- ts(MyData, start =1,frequency = 365)
plot.ts(tsdata)
MyData.acf <- acf(MyData)
MyData.acf
MyData.pacf<-pacf(MyData)
MyData.pacf
diff1 <- diff(tsdata,lag = 1)
acf(diff1)
diff2 <- diff(tsdata,lag = 2)
acf(diff2)
szstock<-read.csv("./Datasets-master/monthly-mean-temp.csv")
MyData <- szstock$Temperature
tsdata <- ts(MyData, start =1,frequency = 12)
plot.ts(tsdata)
MyData.acf <- acf(MyData)
MyData.acf
szstock<-read.csv("./Datasets-master/monthly-mean-temp.csv")
MyData <- szstock$Temperature
tsdata <- ts(MyData, start =c(1920,1),frequency = 12)
plot.ts(tsdata)
MyData.acf <- acf(MyData)
MyData.acf
MyData.pacf<-pacf(MyData)
MyData.pacf
diff1 <- diff(tsdata,lag = 1)
acf(diff1)
diff2 <- diff(tsdata,lag = 2)
acf(diff2)
library(forecast)
ndiffs(tsdata)
library(tseries)
adf.test(tsdata)
adf.test(diff1[-1])
adf.test(diff2[-2])
pacf(diff1)
acf(diff1)
ndiffs(tsdata)
fit_model <- auto.arima(diff1,seasonal = FALSE, ic = "aic")
fit_model
fit_model <- Arima(diff1,order = c(3,0,2))
fit_model <- Arima(diff1,order = c(3,0,2))
fit_model
fit_model.residuals <- residuals(fit_model)
fit_model.fitted <- diff1 - fit_model.residuals
checkresiduals(fit_model)
checkresiduals(fit_model)
fit_model <- Arima(diff1,order = c(2,0,2))
fit_model
fit_model <- Arima(diff1,order = c(3,0,2))
fit_model
checkresiduals(fit_model)
acf(fit_model.residuals)
plot(decompose(tsdata,type = "additive"))
seas_diff <- diff(diff1, lag = 12)
plot(seas_diff)
seas_diff_fit <- auto.arima(seas_diff, d=1,D=1 , trace = T, seasonal = T)
seas_diff_fit
seas_diff <- diff(tsdata, lag = 12)
plot(seas_diff)
seas_diff_fit <- auto.arima(seas_diff, d=1,D=1 , trace = T, seasonal = T)
seas_diff_fit
checkresiduals(seas_diff_fit)
seas_diff_fit <- auto.arima(seas_diff, d=3 ,D=1 , trace = T, seasonal = T)
seas_diff_fit
checkresiduals(seas_diff_fit)
seas_diff_fit <- auto.arima(seas_diff,D=1 , trace = T, seasonal = T)
seas_diff_fit
checkresiduals(seas_diff_fit)
seas_diff_fit <- auto.arima(tsdata,seasonal = T)
seas_diff_fit
checkresiduals(seas_diff_fit)
seas_diff_fit.residual <- residuals(seas_diff_fit)
shapiro.test(seas_diff_fit.residual)
predict.ARIMA <- predict(seas_diff_fit, n.ahead = 12)
autoplot(forecast(wineind.best.seasonal))
autoplot(forecast(tsdata))
autoplot(forecast(tsdata,periodogram(18)))
autoplot(forecast(tsdata))
autoplot(forecast(seas_diff_fit))
autoplot(forecast(seas_diff_fit)) + autoplot(seas_diff_fit)
autoplot(forecast(seas_diff_fit))
predict(seas_diff_fit, n.ahead = 18, trace = FALSE, plot = TRUE)
garch.fitBS <- garchFit(~ARIMA(1,0,2)(1,1,2)[12], data = tsdata, trace = F)
library(fGarch)
install.packages("fGarch")
library(fGarch)
garch.fitBS <- garchFit(~ARIMA(1,0,2)(1,1,2)[12], data = tsdata, trace = F)
autoplot(forecast(Arima(tsdata,order=c(3,0,1),seasonal=c(0,1,2),lambda=0)))
autoplot(forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0)))
fit_intuition <- Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,1),lambda=0)
predict.ARIMA <- predict(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,1),lambda=0), n.ahead = 12)
predict.ARIMA <- predict(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,1),lambda=0), n.ahead = 12)
predict.ARIMA
predict.ARIMA <- predict(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,1),lambda=0), n.ahead = 12*18)
plot(predict.ARIMA)
predict.ARIMA <- predict(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,1),lambda=0), n.ahead = 12*18)
plot.ts(predict.ARIMA)
View(predict.ARIMA)
View(predict.ARIMA)
predict.ARIMA <- predict(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,1),lambda=0), n.ahead = 12*18)
plot(predict.ARIMA$pred)
help("forecast")
autoplot(forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0)),h=18)
autoplot(forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0)),h=1)
autoplot(forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0)),h=216)
autoplot(forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=18))
autoplot(forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216))
autoplot(forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216))
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216)
autoplot(force_best)+autoplot(force_intuition)
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216)
ts.plot(force_best,force_intuition,gpars=list(col=c("blue","red")))
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216)
autoplot(force_best)+autolayer(force_intuition)
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216)
autoplot(force_best)+autolayer(force_intuition,series = "intuition model")
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216)
autoplot(force_best)
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(1,1,2),lambda=0),h=216)
autoplot(force_best)
autoplot(force_intuition)
force_best <- forecast(Arima(tsdata,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
force_intuition <- forecast(Arima(tsdata,order=c(2,0,2),seasonal=c(2,2,2),lambda=0),h=216)
autoplot(force_best)
autoplot(force_intuition)
summary(force_best)
summary(force_best)
summaty(force_intuition)
summary(force_best)
summary(force_intuition)
summary(force_best)
summary(force_intuition)
library(forecast)
ndiffs(tsdata)
car_sale<-read.csv("./Datasets-master/monthly-car-sales.csv")
MyData1 <- car_sale$Sales
tsdata1 <- ts(MyData1, start =c(1960,1),frequency = 12)
plot.ts(tsdata)
car_sale<-read.csv("./Datasets-master/monthly-car-sales.csv")
MyData1 <- car_sale$Sales
tsdata1 <- ts(MyData1, start =c(1960,1),frequency = 12)
plot.ts(tsdata1)
acf(MyData1)
pacf(MyData1)
decompose(tsdata1,type = "additive")
plot(decompose(tsdata1,type = "additive"))
fit_ets <- ets(tsdata1)
summary(fit_ets)
fit_model1 <- forecast(Arima(tsdata1,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
fit_model1 <- forecast(Arima(tsdata1,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
summary(fit_model1)
fit_model_best <- forecast(auto.arima(tsdata1,seasonal = TRUE))
summary(fit_model_best)
fit_model_best <- forecast(auto.arima(tsdata1,seasonal = TRUE,D =1))
summary(fit_model_best)
fit_model <- forecast(Arima(tsdata1,order=c(1,1,2),lambda=0),h=216)
summary(fit_model)
fit_autochose <- auto.arima(tsdata1,seasonal = TRUE, ic = "aic")
summary(fit_autochose)
fit_autochose <- auto.arima(tsdata1,seasonal = TRUE, ic = "aic",D=1)
summary(fit_autochose)
fit_model1 <- forecast(Arima(tsdata1,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
summary(fit_model1)
fit_model1 <- forecast(Arima(tsdata1,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
summary(fit_model1)
checkresiduals(fit_model1)
fit_model1.residuals <- residuals(fit_model)
shapiro.test(fit_model1.residuals)
fit_model <- forecast(Arima(tsdata1,order=c(1,1,2),lambda=0),h=216)
summary(fit_model)
fit_autochose <- auto.arima(tsdata1,seasonal = TRUE, ic = "aic",D=1)
summary(fit_autochose)
fit_model1 <- forecast(Arima(tsdata1,order=c(1,0,2),seasonal=c(1,1,2),lambda=0),h=216)
summary(fit_model1)
checkresiduals(fit_autochose)
fit_autochose.residuals <- residuals(fit_autochose)
fit_autochose.residuals <- residuals(fit_autochose)
fit_autochose.fitted <- tsdata1 - fit_autochose.residuals
ts.plot(tsdata1)
points(fit_autochose.fitted, type = "l", col = 2, lty = 2)
fit_model <- Arima(tsdata1,order=c(1,1,2),lambda=0)
summary(fit_model)
fit_model1 <- Arima(tsdata1,order=c(1,0,2),seasonal=c(1,1,2),lambda=0)
summary(fit_model1)
fit_model <- Arima(tsdata1,order=c(1,1,2),lambda=0)
summary(fit_model)
fit_autochose <- auto.arima(tsdata1,seasonal = TRUE, ic = "aic",D=1)
summary(fit_autochose)
autoplot(forecast(fit_autochose,h=24))
